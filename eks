1.Create an IAM Role for EKS

EKS requires an IAM role for the control plane.
aws iam create-role \
  --role-name EKS-ClusterRole \
  --assume-role-policy-document file://eks-trust-policy.json



2.Ensure the eks-trust-policy.json contains the necessary trust relationship:

{
  "Version": "2012-10-17",
  "Statement": {
    "Effect": "Allow",
    "Principal": {
      "Service": "eks.amazonaws.com"
    },
    "Action": "sts:AssumeRole"
  }
}

3.Attach the required policies:
aws iam attach-role-policy \
  --role-name EKS-ClusterRole \
  --policy-arn arn:aws:iam::aws:policy/AmazonEKSClusterPolicy

4.Create an IAM Role for Worker Nodes (Optional)

aws iam create-role \
  --role-name EKS-WorkerNodeRole \
  --assume-role-policy-document file://eks-trust-policy.json

aws iam attach-role-policy \
  --role-name EKS-WorkerNodeRole \
  --policy-arn arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy

aws iam attach-role-policy \
  --role-name EKS-WorkerNodeRole \
  --policy-arn arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly




5.Create an EKS Cluster using eksctl

Using eksctl makes it much easier to create an EKS cluster. Here's the basic command to create a cluster:
[10/13/24, 12:44:36â€¯PM] Karthik Proxy: eksctl create cluster \
  --name my-cluster \
  --region us-west-2 \
  --version 1.25 \
  --nodegroup-name standard-workers \
  --node-type t3.medium \
  --nodes 3 \
  --nodes-min 1 \
  --nodes-max 4 \
  --managed

--region: AWS region where your cluster is created
--version: Kubernetes version to use (e.g., 1.25)
--nodegroup-name: The name of the worker node group
--node-type: EC2 instance type for worker nodes (e.g., t3.medium)
--nodes: Number of worker nodes to start with
--nodes-min/--nodes-max: Min and max worker nodes for scaling
--managed: Indicates the use of managed node groups

