import psycopg2

# Database configuration
DB_HOST = "localhost"
DB_NAME = "your_database"
DB_USER = "your_user"
DB_PASSWORD = "your_password"
DB_PORT = 5432  # Default PostgreSQL port

def connect_to_db():
    """
    Establish a connection to the PostgreSQL database.
    """
    try:
        conn = psycopg2.connect(
            host=DB_HOST,
            database=DB_NAME,
            user=DB_USER,
            password=DB_PASSWORD,
            port=DB_PORT
        )
        print("Database connection successful.")
        return conn
    except Exception as e:
        print(f"Error connecting to the database: {e}")
        return None

def create_table(conn):
    """
    Create a table in PostgreSQL.
    """
    try:
        cursor = conn.cursor()
        # SQL to create a table
        create_table_query = """
        CREATE TABLE IF NOT EXISTS your_table (
            id SERIAL PRIMARY KEY,
            column1 TEXT NOT NULL,
            column2 TEXT NOT NULL,
            column3 INTEGER
        );
        """
        cursor.execute(create_table_query)
        conn.commit()
        print("Table created successfully.")
    except Exception as e:
        print(f"Error creating table: {e}")
    finally:
        cursor.close()

def insert_data(conn, data):
    """
    Insert data into the PostgreSQL table.
    """
    try:
        cursor = conn.cursor()
        # SQL to insert data
        insert_query = """
        INSERT INTO your_table (column1, column2, column3)
        VALUES (%s, %s, %s);
        """
        cursor.execute(insert_query, data)
        conn.commit()
        print("Data inserted successfully.")
    except Exception as e:
        print(f"Error inserting data: {e}")
    finally:
        cursor.close()

if __name__ == "__main__":
    # Connect to PostgreSQL
    connection = connect_to_db()
    if connection:
        # Create table
        create_table(connection)

        # Data to be inserted
        sample_data = ("Sample Value 1", "Sample Value 2", 123)

        # Insert data
        insert_data(connection, sample_data)

        # Close the connection
        connection.close()
